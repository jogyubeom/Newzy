plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.newzy.backend'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // spring health check
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Boot Starter Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Jakarta Persistence API
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // Jakarta Servlet API
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Swagger (Springdoc OpenAPI)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    implementation 'com.auth0:java-jwt:3.18.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Jackson을 사용하여 JSON 처리

    // MySQL Driver
    implementation 'mysql:mysql-connector-java:8.0.33'

    // 기타 의존성
    implementation 'com.google.guava:guava:29.0-jre'

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'javax.servlet:javax.servlet-api:4.0.1'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.springframework.security:spring-security-test'

    // Lombok (필요한 경우)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation group: 'org.thymeleaf', name: 'thymeleaf', version: '3.1.2.RELEASE'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // S3 image
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.1000'
    implementation 'software.amazon.awssdk:s3:2.20.80'
    implementation 'software.amazon.awssdk:auth:2.20.80'

    // JSON library
    implementation 'org.json:json:20210307'

    // scheduler
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'

    // OAuth 2.0
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
}

tasks.named('test') {
    useJUnitPlatform()
}
