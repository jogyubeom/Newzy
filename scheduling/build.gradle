plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.newzy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Boot Starter Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Jakarta Persistence API
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // Jakarta Servlet API
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // MySQL Driver
    implementation 'mysql:mysql-connector-java:8.0.33'

    // 기타 의존성
    implementation 'com.google.guava:guava:29.0-jre'

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'javax.servlet:javax.servlet-api:4.0.1'
    testImplementation 'org.mockito:mockito-core:5.8.0'

    // Lombok (필요한 경우)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // JSON library
    implementation 'org.json:json:20210307'

    // scheduler
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'

    // ElasticSearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.17.0'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
}

tasks.named('test') {
    useJUnitPlatform()
}
